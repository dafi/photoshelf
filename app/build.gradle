import java.util.regex.Pattern

apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    // Copy dropbox native libraries as described at
    // https://www.dropbox.com/developers/blog/57/using-the-sync-api-with-android-studio
    compile files('libs/dropbox-sync-sdk-android.jar')
    compile files("$buildDir/native-libs/native-libs.jar")

    compile "com.android.support:support-v4:19.1.0"

    compile "org.scribe:scribe:1.3.5"
    compile "org.jsoup:jsoup:1.7.3"
}

android {
    compileSdkVersion 18
    buildToolsVersion "19.1.0"

    signingConfigs {
        release {
            def props = new Properties()
            props.load(new FileInputStream("$rootDir/app/build-keystore.properties"))
            storeFile file(props.get("key.store"))
            storePassword props.get("key.store.password")
            keyAlias props.get("key.alias")
            keyPassword props.get("key.alias.password")
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

task('increaseVersionCode') << {
    def manifestFile = file("src/main/AndroidManifest.xml")
    def pattern = Pattern.compile("(android:versionCode=\")([0-9]+)(\")")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def versionCode = Integer.parseInt(matcher.group(2)) + 1
    def manifestContent = matcher.replaceAll("\$1" + versionCode + "\$3")
    manifestFile.write(manifestContent)
}

task nativeLibsToJar(type: Zip) {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig') {
        task.dependsOn 'increaseVersionCode'
    }
}
